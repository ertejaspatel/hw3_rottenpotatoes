class MoviesController < ApplicationController
  def initialize
    @all_ratings=Movie.all_ratings  
    super  
  end

  def show
    id = params[:id] # retrieve movie ID from URI route
    @sort_by = session[:sort_by]
    @ratings = session[:ratings]
    @movie = Movie.find(id) # look up movie by unique ID
    # will render app/views/movies/show.<extension> by default
  end

  def index
    @sort_by = session[:sort_by]
    @ratings = params[:ratings] || Hash[@all_ratings.zip(@all_ratings.map{|m| 1})]
    session[:ratings] =@ratings
    if(params[:ratings] == nil)
	redirect_to movies_path(sort_by: @sort_by, ratings: @ratings)
    else
     @ratings = params[:ratings]      
    end
   
    if @sort_by == nil
	@movies = Movie.where(rating: @ratings.keys).all
    else 
	@movies = Movie.where(rating: @ratings.keys).order(@sort_by)
    end


  end

  def new
    # default: render 'new' template
  end

  def create
    @movie = Movie.create!(params[:movie])
    flash[:notice] = "#{@movie.title} was successfully created."
    @sort_by = session[:sort_by]
    @ratings = session[:ratings]
    redirect_to movies_path
  end

  def edit
    @movie = Movie.find params[:id]
  end

  def update
    @movie = Movie.find params[:id]
    @movie.update_attributes!(params[:movie])    
    flash[:notice] = "#{@movie.title} was successfully updated."
    redirect_to movie_path(@movie)
  end

  def destroy
    @movie = Movie.find(params[:id])
    @movie.destroy
    flash[:notice] = "Movie '#{@movie.title}' deleted."
    redirect_to movies_path
  end

  def sort
	session[:sort_by] = @sort_by = params[:sort_by]	
        @ratings=session[:ratings] || Hash[@all_ratings.zip(@all_ratings.map{|m| 1})]
	redirect_to movies_path(sort_by: @sort_by, ratings: @ratings)
       
  end

end
